---
name: job-80-poetry-rev_range_command

# Consuming Projects Must Implement:
# - ./.github/scripts/step-setup-environment.sh

on:
  workflow_call:
    inputs:
      COMMAND:
        description: "The command to execute with respect to the Git history. (The PUSHED_COMMIT_REV_RANGE variable will be available to target a particular commit range.)"
        required: true
        type: string
      COMMAND_NAME:
        description: "A description of the command itself for logging purposes."
        required: true
        type: string
      CONCURRENCY:
        description: "The maximum allowable parallel executions."
        required: true
        type: number
      PYTHON_VERSIONS:
        description: "A string encoded JSON array of valid python versions."
        required: true
        type: string
      REMOTE_SCRIPT_DETERMINE_COMMITS:
        default: "ci/github/scripts/step-determine-pushed-commits.sh"
        description: "Optional, allows you to specify a determine commits script."
        required: false
        type: string
      REV_RANGE:
        default: "HEAD"
        description: "Optional, allows you to specify a rev range (i.e. last_commit_to_exclude..HEAD) where a certain type of commits start.  The default value HEAD covers ALL commits."
        required: false
        type: string
      TESTING_MODE:
        default: false
        description: "Optional, allows you to test a workflow failure."
        required: false
        type: boolean
      VERBOSE_NOTIFICATIONS:
        default: false
        description: "Optional, allows you to adjust the notification verbosity."
        required: false
        type: boolean
      WORKFLOW_NAME:
        default: ""
        description: "Identifies this workflow in notifications."
        required: false
        type: string
    secrets:
      SLACK_WEBHOOK:
        description: "Optional, enables Slack notifications."
        required: false

jobs:

  run_command:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ${{ fromJSON(inputs.PYTHON_VERSIONS) }}
      max-parallel: ${{ inputs.CONCURRENCY }}

    steps:
      - name: ${{ inputs.COMMAND_NAME }} -- Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: ${{ inputs.COMMAND_NAME }} -- Setup Environment
        env:
          WORKFLOW_NAME: ${{ inputs.WORKFLOW_NAME }}
        run: |
          bash "./.github/scripts/step-setup-environment.sh"
        shell: bash

      - name: ${{ inputs.COMMAND_NAME }} -- Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: ${{ inputs.COMMAND_NAME }} -- Install Toolbox
        uses: ./.github/actions/action-00-toolbox

      - name: ${{ inputs.COMMAND_NAME }} -- Install Project Dependencies
        uses: ./.cicd-tools/boxes/active/ci/github/actions/action-05-poetry-dependencies

      - name: ${{ inputs.COMMAND_NAME }} -- Determine Pushed Commits
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          PUSH_FALLBACK_REV_RANGE: ${{ inputs.REV_RANGE }}
        run: |
          bash "./.cicd-tools/boxes/active/${{ inputs.REMOTE_SCRIPT_DETERMINE_COMMITS }}"
        shell: bash

      - name: ${{ inputs.COMMAND_NAME }} -- Execute Configured Command
        run: |
          ${{ inputs.COMMAND }}
        shell: bash

      - name: ${{ inputs.COMMAND_NAME }} -- Report Job Status on Success
        if: inputs.VERBOSE_NOTIFICATIONS == true
        uses: ./.cicd-tools/boxes/active/ci/github/actions/action-00-generic-notification
        with:
          NOTIFICATION_MESSAGE: "${{ inputs.COMMAND_NAME }} checks have succeeded!"
          NOTIFICATION_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

      - name: Commit Linting -- Report Job Status on Failure
        if: failure() || inputs.TESTING_MODE == true
        uses: ./.cicd-tools/boxes/active/ci/github/actions/action-00-generic-notification
        with:
          NOTIFICATION_EMOJI: ":x:"
          NOTIFICATION_MESSAGE: "${{ inputs.COMMAND_NAME }} checks have failed!"
          NOTIFICATION_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          TESTING_MODE: ${{ inputs.TESTING_MODE }}
