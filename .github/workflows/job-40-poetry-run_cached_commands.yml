---
name: job-40-poetry-run_cached_commands

# Consuming Projects Must Implement:
# - ./.github/scripts/step-setup-environment.sh

on:
  workflow_call:
    inputs:
      COMMANDS:
        description: "A newline separated string containing the commands to execute."
        required: true
        type: string
      CONCURRENCY:
        description: "The maximum allowable parallel executions."
        required: true
        type: number
      EXECUTION_PATH:
        default: "."
        description: "Optional, allows you to specify a path to execute the command in."
        required: false
        type: string
      INSTALL_PROJECT:
        default: false
        description: "Optional, install the project itself with the dependencies."
        required: false
        type: boolean
      PYTHON_VERSIONS:
        description: "A string encoded JSON array of valid python versions."
        required: true
        type: string
      PLATFORM:
        default: "ubuntu-latest"
        description: "Optional, allows you to specify the OS platform that will be used to run the molecule command."
        required: false
        type: string
      REMOTE_SCRIPT_SET_VALUE:
        default: "ci/github/scripts/step-set-value.sh"
        description: "Optional, allows you to specify a workflow set value script."
        required: false
        type: string
      TESTING_MODE:
        default: false
        description: "Optional, allows you to test a workflow failure."
        required: false
        type: boolean
      VERBOSE_NOTIFICATIONS:
        default: false
        description: "Optional, allows you to adjust the notification verbosity."
        required: false
        type: boolean
      WORKFLOW_NAME:
        default: ""
        description: "Identifies this workflow in notifications."
        required: false
        type: string
    secrets:
      ENV_SECRET_1:
        description: "Optional, content to save to the environment."
        required: false
      ENV_SECRET_2:
        description: "Optional, content to save to the environment."
        required: false
      ENV_SECRET_3:
        description: "Optional, content to save to the environment."
        required: false
      SLACK_WEBHOOK:
        description: "Optional, enables Slack notifications."
        required: false

env:
  ENV_SECRET_1: ${{ secrets.ENV_SECRET_1 }}
  ENV_SECRET_2: ${{ secrets.ENV_SECRET_2 }}
  ENV_SECRET_3: ${{ secrets.ENV_SECRET_3 }}

jobs:

  poetry_command_sequence:

    runs-on: ${{ inputs.PLATFORM }}
    strategy:
      fail-fast: true
      matrix:
        python-version: ${{ fromJSON(inputs.PYTHON_VERSIONS) }}
      max-parallel: ${{ inputs.CONCURRENCY }}

    steps:
      - name: Poetry Command Sequence -- Checkout Repository
        uses: actions/checkout@v4

      - name: Poetry Command Sequence -- Setup Environment
        env:
          WORKFLOW_NAME: ${{ inputs.WORKFLOW_NAME }}
        run: |
          bash "./.github/scripts/step-setup-environment.sh"
        shell: bash

      - name: Poetry Command Sequence -- Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Poetry Command Sequence -- Install Toolbox
        uses: ./.github/actions/action-00-toolbox

      - name: Poetry Command Sequence -- Install Project Dependencies
        uses: ./.cicd-tools/boxes/active/ci/github/actions/action-05-poetry-dependencies
        with:
          INSTALL_PROJECT: ${{ inputs.INSTALL_PROJECT }}

      - name: Poetry Command Sequence -- Execute Commands
        uses: ./.cicd-tools/boxes/active/ci/github/actions/action-20-generic-serial_commands
        with:
          COMMAND_SUFFIX: "poetry run"
          COMMANDS: ${{ inputs.COMMANDS }}
          EXECUTION_PATH: ${{ inputs.EXECUTION_PATH }}

      - name: Poetry Command Sequence -- Report Job Status on Success
        if: inputs.VERBOSE_NOTIFICATIONS == true
        uses: ./.cicd-tools/boxes/active/ci/github/actions/action-00-generic-notification
        with:
          NOTIFICATION_MESSAGE: "Poetry Command Sequence has passed!"
          NOTIFICATION_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

      - name: Poetry Command Sequence -- Report Job Status on Failure
        if: failure() || inputs.TESTING_MODE == true
        uses: ./.cicd-tools/boxes/active/ci/github/actions/action-00-generic-notification
        with:
          NOTIFICATION_EMOJI: ":x:"
          NOTIFICATION_MESSAGE: "Poetry Command Sequence has failed!"
          NOTIFICATION_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          TESTING_MODE: ${{ inputs.TESTING_MODE }}
