---
name: job-40-npm-run_cached_command

# Consuming Projects Must Implement:
# - ./.github/scripts/step-setup-environment.sh

on:
  workflow_call:
    inputs:
      ADDITIONAL_CACHE_PATHS:
        default: ""
        description: "Optional, allows you to specify additional paths to add to the NPM cache."
        required: false
        type: string
      COMMAND:
        description: "The NPM you wish to run. (ie. build, test)."
        required: true
        type: string
      COMMAND_NAME:
        description: "The name of the NPM command you wish to run for logging."
        required: true
        type: string
      CONCURRENCY:
        description: "The maximum allowable parallel executions."
        required: true
        type: number
      ERROR_COMMAND:
        default: ""
        description: "Optional, a command to run if the workflow fails."
        required: false
        type: string
      POST_COMMAND:
        default: ""
        description: "Optional, a command to run after the npm command executes."
        required: false
        type: string
      PRE_COMMAND:
        default: ""
        description: "Optional, a command to run before the npm command executes."
        required: false
        type: string
      SECRET_CONTENT_FILENAME:
        default: ""
        description: "Optional, allows you to write the content of 'secrets.FILE_CONTENT' to the given filename before command execution."
        required: false
        type: string
      TESTING_MODE:
        default: false
        description: "Optional, allows you to test a workflow failure."
        required: false
        type: boolean
      VERBOSE_NOTIFICATIONS:
        default: false
        description: "Optional, allows you to adjust the notification verbosity."
        required: false
        type: boolean
      WORKFLOW_NAME:
        default: ""
        description: "Identifies this workflow in notifications."
        required: false
        type: string
    secrets:
      ENV_SECRET_1:
        description: "Optional, content to save to the environment."
        required: false
      ENV_SECRET_2:
        description: "Optional, content to save to the environment."
        required: false
      ENV_SECRET_3:
        description: "Optional, content to save to the environment."
        required: false
      FILE_CONTENT:
        description: "Optional, content to write to a selected file before command execution."
        required: false
      SLACK_WEBHOOK:
        description: "Optional, enables Slack notifications."
        required: false

env:
  ENV_SECRET_1: ${{ secrets.ENV_SECRET_1 }}
  ENV_SECRET_2: ${{ secrets.ENV_SECRET_2 }}
  ENV_SECRET_3: ${{ secrets.ENV_SECRET_3 }}

jobs:

  run_npm_command:

    runs-on: ubuntu-latest
    steps:
      - name: ${{ inputs.COMMAND_NAME }} -- Checkout Repository
        uses: actions/checkout@v3

      - name: ${{ inputs.COMMAND_NAME }} -- Setup Environment
        env:
          WORKFLOW_NAME: ${{ inputs.WORKFLOW_NAME }}
        run: |
          bash "./.github/scripts/step-setup-environment.sh"
        shell: bash

      - name: ${{ inputs.COMMAND_NAME }} -- Set up Node From 'package.json'
        uses: actions/setup-node@v3
        with:
          node-version-file: 'package.json'

      - name: ${{ inputs.COMMAND_NAME }} -- Install Toolbox
        uses: ./.github/actions/action-00-toolbox

      - name: ${{ inputs.COMMAND_NAME }} -- Install Packages with NPM
        uses: ./.cicd-tools/boxes/active/ci/github/actions/action-05-npm-dependencies
        with:
          ADDITIONAL_CACHE_PATHS: ${{ inputs.ADDITIONAL_CACHE_PATHS }}

      - name: ${{ inputs.COMMAND_NAME }} -- Write to '${{ inputs.SECRET_CONTENT_FILENAME }}'
        if: inputs.SECRET_CONTENT_FILENAME != ''
        run: |
          echo "${FILE_CONTENT}" > "${{ inputs.SECRET_CONTENT_FILENAME }}"
        env:
          FILE_CONTENT: ${{ secrets.FILE_CONTENT }}

      - name: ${{ inputs.COMMAND_NAME }} -- PRE_COMMAND > '${{ inputs.PRE_COMMAND }}'
        if: inputs.PRE_COMMAND != ''
        run: |
          ${{ inputs.PRE_COMMAND }}
        shell: bash

      - name: ${{ inputs.COMMAND_NAME }} -- COMMAND > 'npm run ${{ inputs.COMMAND }}'
        run: |
          npm run ${{ inputs.COMMAND }}
        shell: bash

      - name: ${{ inputs.COMMAND_NAME }} -- POST_COMMAND > '${{ inputs.POST_COMMAND }}'
        if: inputs.POST_COMMAND != ''
        run: |
          ${{ inputs.POST_COMMAND }}
        shell: bash

      - name: ${{ inputs.COMMAND_NAME }} -- Report Job Status on Success
        if: inputs.VERBOSE_NOTIFICATIONS == true
        uses: ./.cicd-tools/boxes/active/ci/github/actions/action-00-generic-notification
        with:
          NOTIFICATION_MESSAGE: "${{ inputs.COMMAND_NAME }} has succeeded!"
          NOTIFICATION_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

      - name: ${{ inputs.COMMAND_NAME }} -- Report Job Status on Failure
        if: failure() || inputs.TESTING_MODE == true
        uses: ./.cicd-tools/boxes/active/ci/github/actions/action-00-generic-notification
        with:
          NOTIFICATION_EMOJI: ":x:"
          NOTIFICATION_MESSAGE: "${{ inputs.COMMAND_NAME }} has failed!"
          NOTIFICATION_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          TESTING_MODE: ${{ inputs.TESTING_MODE }}

      - name: ${{ inputs.COMMAND_NAME }} -- ERROR_COMMAND > '${{ inputs.ERROR_COMMAND }}'
        if: failure() && inputs.ERROR_COMMAND != ''
        run: |
          ${{ inputs.ERROR_COMMAND }}
        shell: bash
