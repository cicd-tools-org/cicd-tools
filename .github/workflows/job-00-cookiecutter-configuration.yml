---
name: job-00-cookiecutter-configuration

on:
  workflow_call:
    inputs:
      CONFIGURATION_PATH:
        default: "cookiecutter.json"
        description: "Optional, allows you to specify the path to the 'cookiecutter.json' file."
        required: false
        type: string
      REMOTE_SCRIPT_SET_VALUE:
        default: "ci/github/scripts/step-set-value.sh"
        description: "Optional, allows you to specify a workflow set value script."
        required: false
        type: string
      SCENARIOS_PATH:
        default: ".github/scenarios"
        description: "Optional, allows you to specify the path to the 'cookiecutter.json' scenario variants."
        required: false
        type: string
    outputs:
      COOKIECUTTER_CONFIGURATION:
        description: "The 'cookiecutter.json' file as a JSON encoded string."
        value: ${{ jobs.configuration.outputs.CONFIGURATION }}
      COOKIECUTTER_ALL_SCENARIOS:
        description: "A string encoded JSON array of 'cookiecutter.json' variants for testing scenarios."
        value: ${{ jobs.configuration.outputs.SCENARIOS }}

jobs:

  configuration:

    runs-on: ubuntu-latest
    outputs:
      CONFIGURATION: ${{ steps.cookiecutter_configuration.outputs.value }}
      SCENARIOS: ${{ steps.cookiecutter_scenarios.outputs.value }}

    steps:
      - name: Create Configuration -- Checkout Repository
        uses: actions/checkout@v3

      - name: Create Configuration -- Install Toolbox
        uses: ./.github/actions/action-00-toolbox

      - name: Create Configuration -- Set Cookiecutter Configuration as Output
        id: cookiecutter_configuration
        run: |
          bash "./.cicd-tools/boxes/active/${{ inputs.REMOTE_SCRIPT_SET_VALUE }}" \
            cat "${{ inputs.CONFIGURATION_PATH }}"
        shell: bash

      - name: Create Configuration -- Set Scenarios as Output
        id: cookiecutter_scenarios
        run: |
          mkdir -p ${{ inputs.SCENARIOS_PATH }}
          bash "./.cicd-tools/boxes/active/${{ inputs.REMOTE_SCRIPT_SET_VALUE }}" \
            python -c 'import os, json, pathlib; print(json.dumps([pathlib.Path(x).stem for x in os.listdir("${{ inputs.SCENARIOS_PATH }}")]))'
        shell: bash
