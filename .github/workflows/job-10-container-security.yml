---
name: job-10-container-security

on:
  workflow_call:
    inputs:
      CONTEXT:
        default: "."
        description: "Optional, allows you define where the build context is located."
        required: false
        type: string
      DOCKERFILE:
        default: "./Dockerfile"
        description: "Optional, allows you define where the Dockerfile is located with respect to the context."
        required: false
        type: string
      IMAGE_NAME:
        default: ""
        description: "Optional, allows you to specify the image and tag name.  A default value is constructed if none is passed."
        required: false
        type: string
      REGISTRY:
        default: "ghcr.io"
        description: "Optional, allows you to specify a Docker registry to use."
        required: false
        type: string
      REMOTE_SCRIPT_DEFAULT_SETTER:
        default: "ci/github/scripts/step-set-value-with-default.sh"
        description: "Optional, allows you to specify different default value creation script."
        required: false
        type: string
      TESTING_MODE:
        default: false
        description: "Optional, allows you to test a workflow failure."
        required: false
        type: boolean
      VERBOSE_NOTIFICATIONS:
        default: false
        description: "Optional, allows you to adjust the notification verbosity."
        required: false
        type: boolean
    secrets:
      SLACK_WEBHOOK:
        description: "Optional, enables Slack notifications."
        required: false

jobs:

  run_anchore:

    runs-on: ubuntu-latest

    steps:
      - name: Container Scan -- Checkout Repository
        uses: actions/checkout@v3

      - name: Container Scan -- Setup Environment
        run: |
          "./.github/scripts/step-setup-environment.sh"
        shell: bash

      - name: Container Scan -- Install Toolbox
        uses: ./.github/actions/action-00-toolbox

      - name: Container Scan -- Configure Registry
        id: registry
        run: |
          bash "./.cicd-tools/boxes/active/${{ inputs.REMOTE_SCRIPT_DEFAULT_SETTER }}" \
            -o "IMAGE_NAME" \
            -d "${{ inputs.REGISTRY }}/${PROJECT_OWNER}/${PROJECT_NAME}:${BRANCH_OR_TAG}" \
            -s "${{ inputs.IMAGE_NAME }}"
        shell: bash

      - name: Container Scan -- Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Container Scan -- Build Container
        uses: docker/build-push-action@v4
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: ${{ inputs.CONTEXT }}
          file: ${{ inputs.CONTEXT }}/${{ inputs.DOCKERFILE }}
          load: true
          tags: |
            localbuild/test:${{ env.BRANCH_OR_TAG }}
            ${{ steps.registry.outputs.IMAGE_NAME }}

      - name: Container Scan -- Run Anchore Scan
        id: scan
        uses: anchore/scan-action@v3
        with:
          fail-build: false
          image: localbuild/test:${{ env.BRANCH_OR_TAG }}
          severity-cutoff: critical

      - name: Container Scan -- Upload SARIF Report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

      - name: Container Scan -- Report Job Status on Success
        if: inputs.VERBOSE_NOTIFICATIONS == true
        uses: ./.cicd-tools/boxes/active/ci/github/actions/action-00-generic-notification
        with:
          NOTIFICATION_MESSAGE: "container security scan has passed!"
          NOTIFICATION_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

      - name: Container Scan -- Report Job Status on Failure
        if: failure() || inputs.TESTING_MODE == true
        uses: ./.cicd-tools/boxes/active/ci/github/actions/action-00-generic-notification
        with:
          NOTIFICATION_EMOJI: ":x:"
          NOTIFICATION_MESSAGE: "container security scan has failed!"
          NOTIFICATION_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
