---
name: cicd-tooling-github-workflow-cookiecutter-template

on:
  push:
  schedule:
    - cron: "0 6 * * 1"
  workflow_dispatch:

#  secrets:
#    SLACK_WEBHOOK:
#      description: "Optional, enables Slack notifications."
#      required: false

jobs:

  configuration:
    uses: ./.github/workflows/job-00-cookiecutter-configuration.yml

  start:
    secrets:
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    uses: ./.github/workflows/job-00-generic-notification.yml
    with:
      NOTIFICATION_EMOJI: ":vertical_traffic_light:"
      NOTIFICATION_MESSAGE: "workflow has started!"
      WORKFLOW_NAME: "cookiecutter"

  security:
    needs: [configuration]
    secrets:
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    uses: ./.github/workflows/job-10-generic-security.yml
    with:
      VERBOSE_NOTIFICATIONS: ${{ fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_VERBOSE_NOTIFICATIONS }}
      WORKFLOW_NAME: "cookiecutter"

  markdown_links:
    needs: [configuration]
    secrets:
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    uses: ./.github/workflows/job-30-cookiecutter-documentation.yml
    with:
      CONCURRENCY: ${{ fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_CONCURRENCY }}
      CONFIG_FILE: "{{cookiecutter.project_slug}}/.github/config/actions/gaurav-nelson-github-action-markdown-link-check.json"
      PYTHON_VERSIONS: ${{ toJSON(fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_PYTHON_VERSIONS) }}
      VERBOSE_NOTIFICATIONS: ${{ fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_VERBOSE_NOTIFICATIONS }}
      WORKFLOW_NAME: "cookiecutter"

  pre-commit_hooks:
    needs: [configuration]
    secrets:
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    uses: ./.github/workflows/job-50-cookiecutter-precommit_hooks.yml
    with:
      CONCURRENCY: ${{ fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_CONCURRENCY }}
      ENABLED_PRECOMMIT_CHECKS: '["test_commit_lint_fails", "test_toml_lint_fails", "test_toml_lint_passes", "test_shell_lint_fails", "test_shell_format_fails", "test_workflow_lint_fails", "test_workflow_header_lint_fails"]'
      PYTHON_VERSIONS: ${{ toJSON(fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_PYTHON_VERSIONS) }}
      TEMPLATE_SCENARIOS: ${{ needs.configuration.outputs.COOKIECUTTER_ALL_SCENARIOS }}
      VERBOSE_NOTIFICATIONS: ${{ fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_VERBOSE_NOTIFICATIONS }}
      WORKFLOW_NAME: "cookiecutter"

  commitizen_hooks:
    needs: [configuration]
    if: startsWith(github.ref, 'refs/heads')
    secrets:
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    uses: ./.github/workflows/job-50-poetry-commitizen_hooks.yml
    with:
      COMMITIZEN_BUMP_TYPE: "MINOR"
      CONCURRENCY: ${{ fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_CONCURRENCY }}
      EXPECTED_BUMPED_VERSION: "0.2.0"
      PYTHON_VERSIONS: ${{ toJSON(fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_PYTHON_VERSIONS) }}
      VERBOSE_NOTIFICATIONS: ${{ fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_VERBOSE_NOTIFICATIONS }}
      WORKFLOW_NAME: "cookiecutter"

  commit_lint:
    needs: [configuration]
    secrets:
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    uses: ./.github/workflows/job-80-poetry-commit_lint.yml
    with:
      CONCURRENCY: ${{ fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_CONCURRENCY }}
      PYTHON_VERSIONS: ${{ toJSON(fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_PYTHON_VERSIONS) }}
      VERBOSE_NOTIFICATIONS: ${{ fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_VERBOSE_NOTIFICATIONS }}
      WORKFLOW_NAME: "cookiecutter"

  json_metaschema_lint:
    needs: [configuration]
    secrets:
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    uses: ./.github/workflows/job-80-poetry-precommit_linter.yml
    with:
      CONCURRENCY: ${{ fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_CONCURRENCY }}
      PRECOMMIT_HOOK_ID: "check-metaschema"
      PRECOMMIT_HOOK_NAME: "JSON Schema Metaschema Linter"
      PYTHON_VERSIONS: ${{ toJSON(fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_PYTHON_VERSIONS) }}
      VERBOSE_NOTIFICATIONS: ${{ fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_VERBOSE_NOTIFICATIONS }}
      WORKFLOW_NAME: "cookiecutter"

  json_schema_lint:
    needs: [configuration]
    secrets:
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    uses: ./.github/workflows/job-80-poetry-precommit_linter.yml
    with:
      CONCURRENCY: ${{ fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_CONCURRENCY }}
      PRECOMMIT_HOOK_ID: "check-jsonschema"
      PRECOMMIT_HOOK_NAME: "Cookiecutter JSON Schema Linter"
      PYTHON_VERSIONS: ${{ toJSON(fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_PYTHON_VERSIONS) }}
      VERBOSE_NOTIFICATIONS: ${{ fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_VERBOSE_NOTIFICATIONS }}
      WORKFLOW_NAME: "cookiecutter"

  shell_lint:
    needs: [configuration]
    secrets:
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    strategy:
      fail-fast: true
      matrix:
        hook:
          - id: "shell-fmt-lint"
            name: "Shell Formatting"
          - id: "shell-lint"
            name: "Shell Linting"
      max-parallel: ${{ fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_CONCURRENCY }}
    uses: ./.github/workflows/job-80-cookiecutter-precommit_linter.yml
    with:
      CONCURRENCY: ${{ fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_CONCURRENCY }}
      PRECOMMIT_HOOK_ID: ${{ matrix.hook.id }}
      PRECOMMIT_HOOK_NAME: ${{ matrix.hook.name }}
      PYTHON_VERSIONS: ${{ toJSON(fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_PYTHON_VERSIONS) }}
      VERBOSE_NOTIFICATIONS: ${{ fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_VERBOSE_NOTIFICATIONS }}
      WORKFLOW_NAME: "cookiecutter"

  toml_lint:
    needs: [configuration]
    secrets:
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    uses: ./.github/workflows/job-80-cookiecutter-precommit_linter.yml
    with:
      CONCURRENCY: ${{ fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_CONCURRENCY }}
      PRECOMMIT_HOOK_ID: "toml-lint"
      PRECOMMIT_HOOK_NAME: "TOML Linting"
      PYTHON_VERSIONS: ${{ toJSON(fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_PYTHON_VERSIONS) }}
      VERBOSE_NOTIFICATIONS: ${{ fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_VERBOSE_NOTIFICATIONS }}
      WORKFLOW_NAME: "cookiecutter"

  workflow_lint:
    needs: [configuration]
    secrets:
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    strategy:
      fail-fast: true
      matrix:
        hook:
          - id: "workflow-lint"
            name: "Workflow Linting"
          - id: "workflow-header-lint"
            name: "Workflow Header Linting"
      max-parallel: ${{ fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_CONCURRENCY }}
    uses: ./.github/workflows/job-80-cookiecutter-precommit_linter.yml
    with:
      CONCURRENCY: ${{ fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_CONCURRENCY }}
      PRECOMMIT_HOOK_ID: ${{ matrix.hook.id }}
      PRECOMMIT_HOOK_NAME: ${{ matrix.hook.name }}
      PYTHON_VERSIONS: ${{ toJSON(fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_PYTHON_VERSIONS) }}
      VERBOSE_NOTIFICATIONS: ${{ fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_VERBOSE_NOTIFICATIONS }}
      WORKFLOW_NAME: "cookiecutter"

  yaml_lint:
    needs: [configuration]
    secrets:
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    uses: ./.github/workflows/job-80-cookiecutter-precommit_linter.yml
    with:
      CONCURRENCY: ${{ fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_CONCURRENCY }}
      PRECOMMIT_HOOK_ID: "yamllint"
      PRECOMMIT_HOOK_NAME: "YAML Linting"
      PYTHON_VERSIONS: ${{ toJSON(fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_PYTHON_VERSIONS) }}
      TEMPLATE_SCENARIOS: ${{ needs.configuration.outputs.COOKIECUTTER_ALL_SCENARIOS }}
      VERBOSE_NOTIFICATIONS: ${{ fromJSON(needs.configuration.outputs.COOKIECUTTER_CONFIGURATION)._GITHUB_CI_DEFAULT_VERBOSE_NOTIFICATIONS }}
      WORKFLOW_NAME: "cookiecutter"

  create_release:
    permissions:
      contents: write
    needs: [configuration, commit_lint, commitizen_hooks, json_metaschema_lint, json_schema_lint, markdown_links, pre-commit_hooks, security, shell_lint, start, toml_lint, workflow_lint, yaml_lint]
    secrets:
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    uses: ./.github/workflows/job-99-poetry-create_release.yml
    with:
      APPENDED_CONTENT: |
        ## Release Checklist
        - [ ] Ensure all remote references have been updated.
        - [ ] Ensure master is synchronized with the release tag.
      WORKFLOW_NAME: "cookiecutter"

  success:
    needs: [create_release, configuration]
    secrets:
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    uses: ./.github/workflows/job-00-generic-notification.yml
    with:
      NOTIFICATION_EMOJI: ":checkered_flag:"
      NOTIFICATION_MESSAGE: "workflow has completed successfully!"
      WORKFLOW_NAME: "cookiecutter"
