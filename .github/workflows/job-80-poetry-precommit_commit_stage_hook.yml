---
name: job-80-poetry-precommit_commit_stage_hook

# Consuming Projects Must Implement:
# - ./.github/scripts/step-setup-environment.sh

on:
  workflow_call:
    inputs:
      CONCURRENCY:
        description: "The maximum allowable parallel executions."
        required: true
        type: number
      INSTALL_PROJECT:
        default: false
        description: "Optional, install the project itself with the dependencies."
        required: false
        type: boolean
      POST_HOOK_COMMAND:
        default: ""
        description: "Optional, a command to run after the hook executes."
        required: false
        type: string
      PRE_HOOK_COMMAND:
        default: ""
        description: "Optional, a command to run before the hook executes."
        required: false
        type: string
      PRECOMMIT_HOOK_ID:
        description: "The 'hook id' of the precommit linter you wish to run."
        required: true
        type: string
      PRECOMMIT_HOOK_NAME:
        description: "The plaintext name of the precommit linter you wish to run."
        required: true
        type: string
      PRECOMMIT_HOOK_STAGE:
        default: ""
        description: "Optional, run the hook in the specified stage."
        required: false
        type: string
      PRECOMMIT_HOOK_VERBOSE:
        default: false
        description: "Optional, set the hook to verbose output mode."
        required: false
        type: boolean
      PYTHON_VERSIONS:
        description: "A string encoded JSON array of valid python versions."
        required: true
        type: string
      REMOTE_SCRIPT_SET_VALUE:
        default: "ci/github/scripts/step-set-value.sh"
        description: "Optional, allows you to specify a workflow set value script."
        required: false
        type: string
      REMOTE_SCRIPT_USE_POETRY:
        default: "ci/generic/scripts/use-poetry.sh"
        description: "Optional, allows you to specify a use poetry script."
        required: false
        type: string
      TESTING_MODE:
        default: false
        description: "Optional, allows you to test a workflow failure."
        required: false
        type: boolean
      VERBOSE_NOTIFICATIONS:
        default: false
        description: "Optional, allows you to adjust the notification verbosity."
        required: false
        type: boolean
      WORKFLOW_NAME:
        default: ""
        description: "Identifies this workflow in notifications."
        required: false
        type: string
    secrets:
      ENV_SECRET_1:
        description: "Optional, content to save to the environment."
        required: false
      ENV_SECRET_2:
        description: "Optional, content to save to the environment."
        required: false
      ENV_SECRET_3:
        description: "Optional, content to save to the environment."
        required: false
      SLACK_WEBHOOK:
        description: "Optional, enables Slack notifications."
        required: false

env:
  ENV_SECRET_1: ${{ secrets.ENV_SECRET_1 }}
  ENV_SECRET_2: ${{ secrets.ENV_SECRET_2 }}
  ENV_SECRET_3: ${{ secrets.ENV_SECRET_3 }}

jobs:

  run_precommit_hook:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ${{ fromJSON(inputs.PYTHON_VERSIONS) }}
      max-parallel: ${{ inputs.CONCURRENCY }}

    steps:
      - name: ${{ inputs.PRECOMMIT_HOOK_NAME }} -- Checkout Repository
        uses: actions/checkout@v4

      - name: ${{ inputs.PRECOMMIT_HOOK_NAME }} -- Setup Environment
        env:
          WORKFLOW_NAME: ${{ inputs.WORKFLOW_NAME }}
        run: |
          bash "./.github/scripts/step-setup-environment.sh"
        shell: bash

      - name: ${{ inputs.PRECOMMIT_HOOK_NAME }} -- Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: ${{ inputs.PRECOMMIT_HOOK_NAME }} -- Install Toolbox
        uses: ./.github/actions/action-00-toolbox

      - name: ${{ inputs.PRECOMMIT_HOOK_NAME }} -- Mount Pre-Commit Cache
        uses: actions/cache@v4
        with:
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}-${{ runner.os }}-${{ env.CACHE_TTL }}
          path: ~/.cache/pre-commit

      - name: ${{ inputs.PRECOMMIT_HOOK_NAME }} -- Install Project Dependencies
        uses: ./.cicd-tools/boxes/active/ci/github/actions/action-05-poetry-dependencies
        with:
          INSTALL_PROJECT: ${{ inputs.INSTALL_PROJECT }}

      - name: ${{ inputs.PRECOMMIT_HOOK_NAME }} -- Configure Hook Verbosity
        id: hook-verbosity
        run: |
          if [[ "${{ inputs.PRECOMMIT_HOOK_VERBOSE }}" == "true" ]]; then
            bash "./.cicd-tools/boxes/active/${{ inputs.REMOTE_SCRIPT_SET_VALUE }}" \
              echo "--verbose"
          else
            bash "./.cicd-tools/boxes/active/${{ inputs.REMOTE_SCRIPT_SET_VALUE }}" \
              echo ""
          fi
        shell: bash

      - name: ${{ inputs.PRECOMMIT_HOOK_NAME }} -- Configure Hook Stage
        id: hook-manual
        run: |
          if [[ -n "${{ inputs.PRECOMMIT_HOOK_STAGE }}" ]]; then
            bash "./.cicd-tools/boxes/active/${{ inputs.REMOTE_SCRIPT_SET_VALUE }}" \
              echo "--hook-stage=${{ inputs.PRECOMMIT_HOOK_STAGE }}"
          else
            bash "./.cicd-tools/boxes/active/${{ inputs.REMOTE_SCRIPT_SET_VALUE }}" \
              echo ""
          fi
        shell: bash

      - name: ${{ inputs.PRECOMMIT_HOOK_NAME }} -- Pre Hook Command
        if: inputs.PRE_HOOK_COMMAND != ''
        run: |
          ${{ inputs.PRE_HOOK_COMMAND }}
        shell: bash

      - name: ${{ inputs.PRECOMMIT_HOOK_NAME }} -- Run '${{ inputs.PRECOMMIT_HOOK_ID }}' pre-commit hook
        run: |
          poetry run pre-commit run ${{ steps.hook-manual.outputs.VALUE }} ${{ inputs.PRECOMMIT_HOOK_ID }} --all-files ${{ steps.hook-verbosity.outputs.VALUE }}
        shell: bash

      - name: ${{ inputs.PRECOMMIT_HOOK_NAME }} -- Post Hook Command
        if: inputs.POST_HOOK_COMMAND != ''
        run: |
          ${{ inputs.POST_HOOK_COMMAND }}
        shell: bash

      - name: ${{ inputs.PRECOMMIT_HOOK_NAME }} -- Report Job Status on Success
        if: inputs.VERBOSE_NOTIFICATIONS == true
        uses: ./.cicd-tools/boxes/active/ci/github/actions/action-00-generic-notification
        with:
          NOTIFICATION_MESSAGE: "${{ inputs.PRECOMMIT_HOOK_NAME }} checks have succeeded!"
          NOTIFICATION_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

      - name: ${{ inputs.PRECOMMIT_HOOK_NAME }} -- Report Job Status on Failure
        if: failure() || inputs.TESTING_MODE == true
        uses: ./.cicd-tools/boxes/active/ci/github/actions/action-00-generic-notification
        with:
          NOTIFICATION_EMOJI: ":x:"
          NOTIFICATION_MESSAGE: "${{ inputs.PRECOMMIT_HOOK_NAME }} checks have failed!"
          NOTIFICATION_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          TESTING_MODE: ${{ inputs.TESTING_MODE }}
