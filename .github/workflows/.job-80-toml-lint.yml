---
name: job-80-toml-lint

on:
  workflow_call:
    inputs:
      CONFIGURATION:
        description: "The 'cookiecutter.json' file as a configuration object."
        required: true
        type: string
      TESTING_MODE:
        default: false
        description: "Optional, allows you to test a workflow failure."
        required: false
        type: boolean
    secrets:
      SLACK_WEBHOOK:
        description: "Optional, enables Slack notifications."
        required: false

env:
  TEMPLATE_SKIP_POETRY: 1
  TEMPLATE_SKIP_PRECOMMIT: 1

jobs:

  run_tomll:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ${{ fromJSON(inputs.CONFIGURATION)._GITHUB_CI_DEFAULT_PYTHON_VERSIONS }}
      max-parallel: ${{ fromJSON(inputs.CONFIGURATION)._GITHUB_CI_DEFAULT_CONCURRENCY }}

    steps:
      - name: Toml Linting -- Checkout Repository
        uses: actions/checkout@v3
        with:
          path: 'template'

      - name: Toml Linting -- Setup Environment
        run: |
          "./template/.github/scripts/step-setup-environment.sh" "${{ inputs.TESTING_MODE }}"
        shell: bash

      - name: Toml Linting -- Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Toml Linting -- Install Template Requirements
        run: |
          "./template/.github/scripts/step-requirements-template.sh"
        shell: bash

      - name: Toml Linting -- Install tomll Binary
        run: |
          sudo apt-get install -y golang-github-pelletier-go-toml
        shell: bash

      - name: Toml Linting -- Render Template
        run: |
          "./template/.github/scripts/step-render-template.sh"
        shell: bash

      - name: Toml Linting -- Run Linter (Template)
        run: |
          cd template
          find . -type f -name "*.toml" -exec tomll "{}" \;
          git diff --exit-code
        shell: bash

      - name: Toml Linting -- Run Linter (Rendered Template)
        run: |
          cd "${TEST_PROJECT_NAME}"
          find . -type f -name "*.toml" -exec tomll "{}" \;
          git diff --exit-code
        shell: bash

      - name: Toml Linting -- Report Job Status on Success
        if: fromJSON(inputs.CONFIGURATION)._GITHUB_CI_DEFAULT_VERBOSE_NOTIFICATIONS == true
        uses: niall-byrne/cicd-tools/.github/actions/action-00-notification@master # Release: update with a valid sha
        with:
          NOTIFICATION_MESSAGE: "TOML lint checks have succeeded!"
          NOTIFICATION_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          PROJECT_ROOT_PATH: "template"

      - name: Toml Linting -- Report Job Status on Failure
        if: failure() || inputs.TESTING_MODE == true
        uses: niall-byrne/cicd-tools/.github/actions/action-00-notification@master # Release: update with a valid sha
        with:
          NOTIFICATION_EMOJI: ":x:"
          NOTIFICATION_MESSAGE: "TOML lint checks have failed!"
          NOTIFICATION_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          PROJECT_ROOT_PATH: "template"
